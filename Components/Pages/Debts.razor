@page "/debtss"
@using Coursework.Models
@inject UserService UserService

<h1>User Debts</h1>

<table class="table">
    <thead>
        <tr>
            <th>Debt ID</th>
            <th>Debt Amount</th>
            <th>Paid Amount</th>
            <th>Remaining Amount</th>
            <th>Description</th>
            <th>Due Date</th>
            <th>Total Debt</th> <!-- New Total Debt column -->
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var debt in Data.Debts)
        {
            <tr>
                <td>@debt.Id</td>
                <td>@debt.DebtAmount</td>
                <td>@debt.PaidAmount</td>
                <td>@Math.Max(debt.DebtAmount - debt.PaidAmount, 0)</td>  <!-- Remaining Amount -->
                <td>@debt.Description</td>
                <td>@debt.DueDate.ToString("MM/dd/yyyy")</td>
                <td>@(Data.Debts.Sum(d => d.DebtAmount).ToString("C"))</td> <!-- Total Debt for each row -->
                <td>
                    <button class="btn btn-warning" @onclick="() => EditDebt(debt)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteDebt(debt.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<h2>@(isEditMode ? "Edit" : "Add New") Debt</h2>
<EditForm Model="newDebt" OnValidSubmit="HandleDebtSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="debtAmount">Debt Amount</label>
        <InputNumber id="debtAmount" @bind-Value="newDebt.DebtAmount" class="form-control" />
    </div>

    <div class="form-group">
        <label for="paidAmount">Paid Amount</label>
        <InputNumber id="paidAmount" @bind-Value="newDebt.PaidAmount" class="form-control" />
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newDebt.Description" class="form-control" />
    </div>

    <div class="form-group">
        <label for="dueDate">Due Date</label>
        <InputDate id="dueDate" @bind-Value="newDebt.DueDate" class="form-control" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">
            @(isEditMode ? "Update" : "Add") Debt
        </button>
    </div>
</EditForm>

@code {
    private AppData Data;
    private Debt newDebt = new Debt();
    private bool isEditMode = false;

    protected override void OnInitialized()
    {
        Data = UserService.LoadData();
    }

    private void HandleDebtSubmit()
    {
        if (isEditMode)
        {
            var debt = Data.Debts.FirstOrDefault(d => d.Id == newDebt.Id);
            if (debt != null)
            {
                debt.DebtAmount = newDebt.DebtAmount;
                debt.PaidAmount = newDebt.PaidAmount;
                debt.Description = newDebt.Description;
                debt.DueDate = newDebt.DueDate;
            }
        }
        else
        {
            newDebt.Id = Data.Debts.Count + 1;
            Data.Debts.Add(newDebt);
        }

        UserService.SaveData(Data);
        newDebt = new Debt { DueDate = DateTime.Now };
        isEditMode = false;
    }

    private void EditDebt(Debt debt)
    {
        newDebt = new Debt
            {
                Id = debt.Id,
                DebtAmount = debt.DebtAmount,
                PaidAmount = debt.PaidAmount,
                Description = debt.Description,
                DueDate = debt.DueDate
            };
        isEditMode = true;
    }

    private void DeleteDebt(int id)
    {
        var debt = Data.Debts.FirstOrDefault(d => d.Id == id);
        if (debt != null)
        {
            Data.Debts.Remove(debt);
            UserService.SaveData(Data);
        }
    }
}
